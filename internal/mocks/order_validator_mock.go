// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/services/order_validator.go

// Package mock_services is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockOrderValidator is a mock of OrderValidator interface.
type MockOrderValidator struct {
	ctrl     *gomock.Controller
	recorder *MockOrderValidatorMockRecorder
}

// MockOrderValidatorMockRecorder is the mock recorder for MockOrderValidator.
type MockOrderValidatorMockRecorder struct {
	mock *MockOrderValidator
}

// NewMockOrderValidator creates a new mock instance.
func NewMockOrderValidator(ctrl *gomock.Controller) *MockOrderValidator {
	mock := &MockOrderValidator{ctrl: ctrl}
	mock.recorder = &MockOrderValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrderValidator) EXPECT() *MockOrderValidatorMockRecorder {
	return m.recorder
}

// Validate mocks base method.
func (m *MockOrderValidator) Validate(orderNumber int64) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Validate", orderNumber)
	ret0, _ := ret[0].(bool)
	return ret0
}

// Validate indicates an expected call of Validate.
func (mr *MockOrderValidatorMockRecorder) Validate(orderNumber interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MockOrderValidator)(nil).Validate), orderNumber)
}
