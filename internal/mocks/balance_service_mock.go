// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/services/interfaces/balance_service.go

// Package mock_interfaces is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/DmitriyV003/bonus/internal/models"
	resources "github.com/DmitriyV003/bonus/internal/resources"
	gomock "github.com/golang/mock/gomock"
)

// MockBalanceService is a mock of BalanceService interface.
type MockBalanceService struct {
	ctrl     *gomock.Controller
	recorder *MockBalanceServiceMockRecorder
}

// MockBalanceServiceMockRecorder is the mock recorder for MockBalanceService.
type MockBalanceServiceMockRecorder struct {
	mock *MockBalanceService
}

// NewMockBalanceService creates a new mock instance.
func NewMockBalanceService(ctrl *gomock.Controller) *MockBalanceService {
	mock := &MockBalanceService{ctrl: ctrl}
	mock.recorder = &MockBalanceServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBalanceService) EXPECT() *MockBalanceServiceMockRecorder {
	return m.recorder
}

// Accrual mocks base method.
func (m *MockBalanceService) Accrual(ctx context.Context, payment *models.Payment, user *models.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Accrual", ctx, payment, user)
	ret0, _ := ret[0].(error)
	return ret0
}

// Accrual indicates an expected call of Accrual.
func (mr *MockBalanceServiceMockRecorder) Accrual(ctx, payment, user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Accrual", reflect.TypeOf((*MockBalanceService)(nil).Accrual), ctx, payment, user)
}

// Balance mocks base method.
func (m *MockBalanceService) Balance(ctx context.Context, user *models.User) (*resources.UserBalanceResource, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Balance", ctx, user)
	ret0, _ := ret[0].(*resources.UserBalanceResource)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Balance indicates an expected call of Balance.
func (mr *MockBalanceServiceMockRecorder) Balance(ctx, user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Balance", reflect.TypeOf((*MockBalanceService)(nil).Balance), ctx, user)
}

// Withdraw mocks base method.
func (m *MockBalanceService) Withdraw(ctx context.Context, payment *models.Payment, user *models.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Withdraw", ctx, payment, user)
	ret0, _ := ret[0].(error)
	return ret0
}

// Withdraw indicates an expected call of Withdraw.
func (mr *MockBalanceServiceMockRecorder) Withdraw(ctx, payment, user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Withdraw", reflect.TypeOf((*MockBalanceService)(nil).Withdraw), ctx, payment, user)
}
