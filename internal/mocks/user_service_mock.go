// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/services/interfaces/user_service.go

// Package mock_interfaces is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/DmitriyV003/bonus/internal/models"
	requests "github.com/DmitriyV003/bonus/internal/requests"
	interfaces "github.com/DmitriyV003/bonus/internal/services/interfaces"
	gomock "github.com/golang/mock/gomock"
)

// MockUserService is a mock of UserService interface.
type MockUserService struct {
	ctrl     *gomock.Controller
	recorder *MockUserServiceMockRecorder
}

// MockUserServiceMockRecorder is the mock recorder for MockUserService.
type MockUserServiceMockRecorder struct {
	mock *MockUserService
}

// NewMockUserService creates a new mock instance.
func NewMockUserService(ctrl *gomock.Controller) *MockUserService {
	mock := &MockUserService{ctrl: ctrl}
	mock.recorder = &MockUserServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserService) EXPECT() *MockUserServiceMockRecorder {
	return m.recorder
}

// AllWithdrawsByUser mocks base method.
func (m *MockUserService) AllWithdrawsByUser(ctx context.Context, user *models.User) ([]*models.Payment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AllWithdrawsByUser", ctx, user)
	ret0, _ := ret[0].([]*models.Payment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AllWithdrawsByUser indicates an expected call of AllWithdrawsByUser.
func (mr *MockUserServiceMockRecorder) AllWithdrawsByUser(ctx, user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AllWithdrawsByUser", reflect.TypeOf((*MockUserService)(nil).AllWithdrawsByUser), ctx, user)
}

// Create mocks base method.
func (m *MockUserService) Create(ctx context.Context, request *requests.RegistrationRequest) (*interfaces.Token, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, request)
	ret0, _ := ret[0].(*interfaces.Token)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockUserServiceMockRecorder) Create(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockUserService)(nil).Create), ctx, request)
}

// Withdraw mocks base method.
func (m *MockUserService) Withdraw(ctx context.Context, user *models.User, orderNumber string, sum float64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Withdraw", ctx, user, orderNumber, sum)
	ret0, _ := ret[0].(error)
	return ret0
}

// Withdraw indicates an expected call of Withdraw.
func (mr *MockUserServiceMockRecorder) Withdraw(ctx, user, orderNumber, sum interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Withdraw", reflect.TypeOf((*MockUserService)(nil).Withdraw), ctx, user, orderNumber, sum)
}
